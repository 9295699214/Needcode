import heapq


class Solution:
    def topKFrequent(self, nums: list[int], k: int) -> list[int]:
        hashmap = {}
        for num in nums:
            if num not in hashmap:
                hashmap[num] = 1
            else:
                hashmap[num] += 1
        
        heap = []
        for key in hashmap:
            heapq.heappush(heap, (-hashmap[key], key))
        res = []
        for _ in range(k):
            popped = heapq.heappop(heap)
            res.append(popped[1])
        return res


nums = [1, 1, 1, 2, 2, 3]
k = 2
nums1 = [1]
k1 = 1
sol = Solution()
result = sol.topKFrequent(nums, k)
print(result)
result1 = sol.topKFrequent(nums1, k1)
print(result1)
